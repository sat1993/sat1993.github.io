<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo+NexT搭建私人博客]]></title>
    <url>%2F2018%2F01%2F10%2FHexo%2BNexT-build-personal-blog%2F</url>
    <content type="text"><![CDATA[通过Hexo+Next和Github Pages搭建私人博客。 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 NexT 是Hexo的一套漂亮精简的Theme，内集成第三方评论、RSS订阅、文章分类、文章标签、搜索等功能。 Github Pages 是面向用户、组织和项目开放的公共静态页面搭建托管服务，站点可以被免费托管在Github上。 这是我阅读的hexo相关的博客 www.cduyzh.com、thief.one 准备工作 nodejs 环境，建议通过nvm安装。安装之后通过npm install yarn -g安装yarn包管理工具。 git和github账号。 名词解释： 站点目录 - 博客根目录 主题目录 - 站点目录下theme目录下具体的主题目录，如landscape。 站点配置文件 - 站点目录下的_config.yml 主题配置文件 - 主题目录下的_config.yml，配置主题信息 初始化hexo12345678# 创建博客目录~ mkdir bakka-blog &amp;&amp; cd bakka-blog# 安装hexo~ yarn global add hexo# 初始化博客~ hexo init# 启动hexo本地服务~ hexo s 通过hexo s命令启动之后，博客服务可以通过localhost:4000访问。初始化的博客会默认使用landscape主题。 关联博客与github在github上创建{accout}.github.io的仓库，{accout}为github用户名。此时可以访问{account}.github.io域名，得到404页面。我的仓库为sat1993.github.io，因此下面都以此为例。 修改博客目录下的_config.yml(站点配置文件)，将deploy节点下的type修改为git，并配置仓库信息。1234deploy: type: git repository: https://github.com/sat1993/sat1993.github.io.git branch: master 如果deploy.repository想要配置ssh协议，需要配置git信息。 部署服务到github上。12345678910# 安装hexo git部署插件。在站点目录下运行：~ yarn add hexo-deployer-git# 清空本地数据库~ hexo clean# 打包博客生成静态资源文件.~ hexo generate# 部署博客静态资源文件到github~ hexo deploy# 本地查看博客。服务为http://localhost:4000~ hexo server 部署完成后，可以通过sat1993.github.io访问到Hello World博文。 域名绑定通过sat1993.github.io访问实在是不雅。这里可以绑定自己的域名。但绑定自己的域名是无法设置https安全证书的。 域名解析：123记录类型： CNAME主机记录： 自定义域名记录值： sat1993.github.io hexo绑定CNAME文件。如果不添加该文件将一直跳转404页面。这也算是防止别人挂一个域名盗用博客。12# 进入站点目录。~ echo &quot;blog.bakka.site&quot; &gt; source/CNAME 通过hexo g和hexo d之后，便可以通过自己的域名访问服务了。 发布第一篇博文通过hexo new my-first-blog可以初始化第一篇博文到站点目录/source/_posts下。123456---title: my-first-blogdate: 2018-01-10 20:01:34tags:categories:--- 在---后编写博文，通过hexo s启动服务，访问http://localhost:4000/2018/01/10/my-first-blog 。确认博客无误之后，通过hexo g和hexo d部署发布博文。通过http://blog.bakka.site/2018/01/10/my-first-blog 访问正式的博文。 如果要删除博文，直接删除站点目录/source/_posts/my-first-blog.md再通过hexo g &amp;&amp; hexo d部署到github上就ok了。 博文起始字段含义: title 文章的标题 date 创建日期 （文件的创建日期 ） updated 修改日期 （ 文件的修改日期） comments 是否开启评论 true，默认为false tags 标签 categories 分类 permalink url中的名字（文件名） 博文备份hexo是通过本地解析将站点目录/source/_posts/下的md文件解析成html文件,保存在public目录下。其他的静态资源也会保存在站点目录/public下。如果不小心丢失本地的站点目录，将会导致无法更新博客。 在站点目录下通过git init构建git仓库。通过github创建仓库。修改.git/config,在文件结尾添加。123456[remote &quot;origin&quot;] url = 创建的git仓库地址。 fetch = +refs/heads/*:refs/remotes/origin/*[branch &quot;master&quot;] remote = origin merge = refs/heads/master 因为本地已有.gitignore文件。因此我是没有修改.gitignore的。若不存在该文件，则修改成如下内容。123456789101112.DS_Store# 数据库文件Thumbs.dbdb.json# 日志文件*.log# 依赖文件，可以通过yarn安装回来node_modules/# 打包后的静态资源，可通过hexo g打包public/# 部署的临时文件.deploy*/ 通过git命令上传仓库。 上传主题仓库上传站点目录时，我们发现主题所在仓库是无法上传到git上的。因为我们的主题目录本身也是git clone下来的。 这里可以通过删除主题仓库的git相关文件(不建议)：1~ rm -rf .git* 或者fork https://github.com/iissnan/hexo-theme-next作为自己的一个主题仓库。修改.git/config文件：12345678910111213[core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true[remote &quot;origin&quot;] url = fork的主题仓库地址 fetch = +refs/heads/*:refs/remotes/origin/*[branch &quot;master&quot;] remote = origin merge = refs/heads/master 上传我们的主题改动。将该仓库作为我们独有改动过的仓库。 虽然这样导致我们会有2个git仓库存我们的博客代码，但是分站点、主题两个部分去维护，也是可以的。 站点配置配置站点基本信息，如语言、作者、标题等。 站点基础配置修改站点配置文件_config.yml，修改# Site下的配置：12345678910111213# Site# 标题title: Bakka&apos;s Blog# 子标题subtitle:# 站点描述description:# 作者信息，主要展示于footer上author: 进击的马鹿# 修改首页语言，默认为英语language: zh-Hans# 修改时区timezone: 这里主要修改title、author、language三个属性。 配置主题为NexT到站点目录，克隆主题到主题目录：12# 克隆NexT项目到themes/next目录下~ git clone https://github.com/iissnan/hexo-theme-next.git themes/next 修改站点配置文件_config.yml当前主题为next(themes目录下的主题目录名) 1theme: next 运行hexo g &amp;&amp; hexo d生成静态文件并发布。 NexT 官方文档 站点404页面设置腾讯公益404页面，寻找丢失儿童，让大家一起关注此项公益事业！效果如下 http://www.ixirong.com/404.html 使用方法，新建 404.html 页面，放到主题的 source 目录下，内容如下： 123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot; charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot; homePageName=&quot;回到我的主页&quot;&gt; &lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 配置默认博文模板修改站点目录下scaffolds/post.md文件，修改为： 12345678---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;updated: &#123;&#123; date &#125;&#125;tags:categories:comments: true--- 这样每次hexo new blog的时候，都会带有这些起始字段。 博文压缩在站点目录下执行： 1234# 安装gulp工具命令~ yarn global add gulp# 安装gulp与gulp压缩插件~ yarn add gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp 在站点根目录下新建gulpfile.js，并填入以下内容: 123456789101112131415161718192021222324252627282930313233var gulp = require(&apos;gulp&apos;);var minifycss = require(&apos;gulp-minify-css&apos;);var uglify = require(&apos;gulp-uglify&apos;);var htmlmin = require(&apos;gulp-htmlmin&apos;);var htmlclean = require(&apos;gulp-htmlclean&apos;);// 压缩 public 目录 cssgulp.task(&apos;minify-css&apos;, function() &#123; return gulp.src(&apos;./public/**/*.css&apos;) .pipe(minifycss()) .pipe(gulp.dest(&apos;./public&apos;));&#125;);// 压缩 public 目录 htmlgulp.task(&apos;minify-html&apos;, function() &#123; return gulp.src(&apos;./public/**/*.html&apos;) .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest(&apos;./public&apos;))&#125;);// 压缩 public/js 目录 jsgulp.task(&apos;minify-js&apos;, function() &#123; return gulp.src(&apos;./public/**/*.js&apos;) .pipe(uglify()) .pipe(gulp.dest(&apos;./public&apos;));&#125;);// 执行 gulp 命令时执行的任务gulp.task(&apos;default&apos;, [ &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;]); 之后可以通过hexo g &amp;&amp; gulp来生成静态资源并压缩了。 添加搜索功能安装hexo-generator-searchdb,在站点目录下执行：1yarn add hexo-generator-searchdb 编辑站点配置文件_config.yml，添加以下内容:12345search: path: search.xml field: post format: html limit: 10000 主题配置主要配置主题的基本信息，标签、菜单、CopyRight等。 修改网站页签图标修改主题配置文件_config.yml，在favicon字段中修改small、medium:123favicon: small: /images/favicon-16x16.png medium: /images/favicon-32x32.png 将自己的图标(16x16、32x32)放置到主题目录的source/images目录下。12~ mv my-16x16-icon.png theme/next/source/images/favicon-16x16.png~ mv my-32x32-icon.png theme/next/source/images/favicon-32x32.png 刷新服务即可。 菜单管理修改主题配置文件_config.yml，在menu字段中添加字段：1234menu: home: / about: /about ... 修改主题目录下的languages/zh-Hans.yml文件,更新中文展示：1234menu: host: 首页 about: 关于马鹿 ... 最后在主题目录下的source目录下创建about目录，并放入index.html文件即可。 添加标签、分类菜单添加标签菜单修改主题配置文件，添加menu.tags: /tags/ || tags。12menu: tags: /tags/ || tags 定位到站点目录下，使用hexo新建一个页面tags:1hexo new page tags 编辑刚刚生成的页面(source/tags/index.md)，将页面类型设置为tags:123456---title: 标签date: 2018-01-10 23:11:01type: &quot;tags&quot;comments: false--- 可以通过comments参数开启评论. 添加分类菜单修改主题配置文件，添加menu.categories: /categories/ || th12menu: categories: /categories/ || th 定位到站点目录下，使用hexo新建一个页面categories:1hexo new page categories 编辑刚刚生成的页面(source/categories/index.md)，将页面类型设置为categories:123456---title: 分类date: 2018-01-10 23:11:43type: &quot;categories&quot;comments: false--- 可以通过comments参数开启评论 设置完毕后通过hexo g&amp;&amp; hexo s快速查看效果。 修改js、css CDN配置通过修改主题的固定js、css到公开静态资源仓库，降低github的流量访问，提升读客访问博文。 这里推荐使用Staticfile CDN 修改主题配置文件_config.yml: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152vendors: # Internal path prefix. Please do not edit it. _internal: vendors # Internal version: 2.1.3 jquery: https://cdn.staticfile.org/jquery/2.1.3/jquery.min.js # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ fancybox: https://cdn.staticfile.org/fancybox/2.1.5/jquery.fancybox.pack.js fancybox_css: https://cdn.staticfile.org/fancybox/2.1.5/jquery.fancybox.min.css # Internal version: 1.0.6 # See: https://github.com/ftlabs/fastclick fastclick: https://cdn.staticfile.org/fastclick/1.0.6/fastclick.min.js # Internal version: 1.9.7 # See: https://github.com/tuupola/jquery_lazyload lazyload: https://cdn.staticfile.org/jquery_lazyload/1.9.7/jquery.lazyload.min.js # Internal version: 1.2.1 # See: http://VelocityJS.org velocity: https://cdn.staticfile.org/velocity/1.2.1/velocity.min.js # Internal version: 1.2.1 # See: http://VelocityJS.org velocity_ui: https://cdn.staticfile.org/velocity/1.2.1/velocity.ui.min.js # Internal version: 0.7.9 # See: https://faisalman.github.io/ua-parser-js/ ua_parser: https://cdn.staticfile.org/UAParser.js/0.7.9/ua-parser.min.js # Internal version: 4.6.2 # See: http://fontawesome.io/ fontawesome: https://cdn.staticfile.org/font-awesome/4.6.2/css/font-awesome.min.css # Internal version: 1 # https://www.algolia.com algolia_instant_js: algolia_instant_css: # Internal version: 1.0.2 # See: https://github.com/HubSpot/pace # Or use direct links below: # pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js # pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css pace: https://cdn.staticfile.org/pace/1.0.2/pace.min.js pace_css: https://cdn.staticfile.org/pace/1.0.2/themes/blue/pace-theme-flash.min.css # Internal version: 1.0.0 # https://github.com/hustcc/canvas-nest.js canvas_nest: https://cdn.staticfile.org/canvas-nest.js/1.0.0/canvas-nest.min.js 注释的部分是当前版本的NexT所使用的版本。建议引用的CDN版本一定要一直。修改完成后，通过hexo s预览下效果。 添加顶部加载条修改主题目录下的layout/_custom/header.swig文件，添加如下内容：123456789101112131415&lt;script src=&quot;https://cdn.staticfile.org/pace/1.0.2/pace.min.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;https://cdn.staticfile.org/pace/1.0.2/themes/blue/pace-theme-flash.min.css&quot; rel=&quot;stylesheet&quot;&gt;&lt;style&gt; .pace .pace-progress &#123; background: #1E92FB; /*进度条颜色*/ height: 3px; &#125; .pace .pace-progress-inner &#123; box-shadow: 0 0 10px #1E92FB, 0 0 5px #1E92FB; /*阴影颜色*/ &#125; .pace .pace-activity &#123; border-top-color: #1E92FB; /*上边框颜色*/ border-left-color: #1E92FB; /*左边框颜色*/ &#125;&lt;/style&gt; 通过hexo s运行本地服务访问首页就可以看到效果了。 隐藏网页地步Powered By信息修改主题配置文件_config.yml。修改footer.powered、footer.theme.enable和footer.theme.version为false：12345678910footer: # ------------------------------------------------------------- # Hexo link (Powered by Hexo). powered: false theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false 添加来必力评论登陆来必力,点击右上角头像-&gt;管理页面-&gt;安装Free版本。填入站点信息之后，将会获得如下代码：123456789101112131415161718&lt;!-- 来必力City版安装代码 --&gt;&lt;div id=&quot;lv-container&quot; data-id=&quot;city&quot; data-uid=&quot;xxxx&quot;&gt;&lt;script type=&quot;text/javascript&quot;&gt; (function(d, s) &#123; var j, e = d.getElementsByTagName(s)[0]; if (typeof LivereTower === &apos;function&apos;) &#123; return; &#125; j = d.createElement(s); j.src = &apos;https://cdn-city.livere.com/js/embed.dist.js&apos;; j.async = true; e.parentNode.insertBefore(j, e); &#125;)(document, &apos;script&apos;);&lt;/script&gt;&lt;noscript&gt;为正常使用来必力评论功能请激活JavaScript&lt;/noscript&gt;&lt;/div&gt;&lt;!-- City版安装代码已完成 --&gt; 其中第一行div标签的data-uid属性复制出来。填入到主题配置文件的livere_uid属性中：1livere_uid: xxxx 在hexo g &amp;&amp; hexo s之后即可看到文章最下方的评论。 添加访问统计登陆百度统计，添加网站后，获取到如下代码:123456789&lt;script&gt;var _hmt = _hmt || [];(function() &#123; var hm = document.createElement(&quot;script&quot;); hm.src = &quot;https://hm.baidu.com/hm.js?xxxxx&quot;; var s = document.getElementsByTagName(&quot;script&quot;)[0]; s.parentNode.insertBefore(hm, s);&#125;)();&lt;/script&gt; 获取hm.js?后的统计Idxxxxx将其填入主题配置文件_config.yml中1baidu_analytics: xxxxx 在hexo g &amp;&amp; hexo s之后即可添加百度统计。]]></content>
      <categories>
        <category>手记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>NexT</tag>
        <tag>私人博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装centos7操作系统]]></title>
    <url>%2F2018%2F01%2F10%2Finstall-operating-system%2F</url>
    <content type="text"><![CDATA[服务器简介最初在3月份的时候折腾过服务器。当时配置是 机械键盘500G 7年使用龄 海盗船笔记本内存8G G3460 cpu 华硕H81T主板 在12月24日进行了硬件升级，主要原因还是因为我准备构建服务，担心我家的硬盘给我整崩了。还有一个原因是双十一的时候800购买了3年的虚拟机，有了一个公网ip，可以对外服务了。 基于以上原因，升级了一下配置 镁光MX200固态硬盘256G 2年使用龄.不过因为笔记本一直吃灰，就从笔记本上扣了下来。 海盗船笔记本内存16G 笔记本的内存、硬盘都被我扣了。彻底报废，cpu针脚不对，不然i5双核的cpu也能用。 G3460 cpu cpu成大短板，不过没事，再短没有我家方正100M带宽短。 华硕H81T主板 主板棒棒哒。服务器退休以后还可以升级下部件做一体机，倒不如说现在就可以逛贴吧。 debian9.3.0系统在3月份的时候机器已经有centos7 1611系统，不过把硬盘干了也得重来。debian相比centos7依赖库新、多，系统本身轻量稳定。内核为4.x.x。python 3.x版本但是离线安装版没有gcc、make等。无法安装网卡。离线安装gcc，但相关的deb包有40个以上。直接放弃。 centos7 1708系统原机械硬盘安装的是1611版本，也算是升级了一下。centos7相对而言比较稳定，但存在yum库老旧，大多数依赖需要手动配置yum源，如docker。甚至也有需要单独安装的git。系统自带的python也是2.7.9版本。但相对debian，初始安装时勾选development Envirment，会带有gcc、make等工具。几乎一键安装网卡驱动。前提是先升级内核。。内核版本3.10.0，r8168驱动需要4.7以上内核。 安装的时候遇到的问题：选取install CentOS7或者 Test this media &amp; install CentOS 7 直接黑屏?上网查询之后发现是机器没有图形卡或者图形卡驱动不匹配导致的。这里选择第三个选项Troubleshooting。再选择Install CentOS7 in basic graphics mode此选项允许您在图形模式下安装CentOS的，即使安装程序无法加载正确的驱动程序为您的视频卡。如果你的屏幕会出现扭曲或使用安装CentOS选项时一片空白。 参考链接：http://www.cnblogs.com/yllinux/p/7238630.html 安装完成之后没有gcc，无法安装网卡驱动?依据之前1611安装经验，在miniInstall中需要勾选Development Envirment安装基础的开发工具，这样会带有gcc、make等工具。 内核升级因为电脑没有网络，需要离线安装内核。 下载制定版本的kernel、kernel-devel 下载其中的kernel-ml-devel-4.14.8-1.el7.elrepo.x86_64.rpm、kernel-ml-4.14.8-1.el7.elrepo.x86_64.rpm。 12~ yum -y install kernel-ml-devel-4.14.8-1.el7.elrepo.x86_64.rpm~ yum -y install kernel-ml-4.14.8-1.el7.elrepo.x86_64.rpm 在内核安装完成之后还需要修改内核的启动顺序。 修改grub中默认的内核版本运行~ grub2-editenv list,查看当前默认启动内核。 查看所有内核：~ cat /boot/grub2/grub.cfg | grep menuentry 复制第一个单词menuentry 后面单引号包裹的内核型号。与grub2-editenv list运行的结果saved_entry=是一样的。 修改最新的内核为默认启动：~ grub2-set-default &#39;Red Hat Enterprise Linux Server (4.4.0) 7.2 (Maipo)&#39; 最后调用~ grub2-editenv list查看是否更新默认启动的内核。 参考链接：http://www.voidcn.com/article/p-oojnbemz-bqr.html 安装网卡驱动123456解压0010-r8168-8.045.08.tar.bz2:~ bzip 0010-r8168-8.045.08.tar.bz2~ tar -xvf 0010-r8168-8.045.08.tar安装网卡驱动~ cd r8168-8.045.08~ sh autorun.sh 安装完成之后插上网线就可以看到有黄灯闪烁。 至此机器可以直接插网线到路由器上，通过ssh进行操作。 切换yum源为阿里云镜像源有了网卡第一件事就是切换yum源，家里的破网实在蛋疼。curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo之后运行yum makecache生成缓存，切换完成~]]></content>
      <categories>
        <category>个人服务器</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
</search>
